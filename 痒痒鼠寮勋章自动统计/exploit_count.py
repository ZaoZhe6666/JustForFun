#coding:UTF-8
import win32api
import win32con
import win32gui
import time
import random
import pytesseract
from PIL import ImageGrab
from PIL import Image

manage_symb_hash = '0000f0006000000000400fe00fe00fff0fff0fff0fff0fff0fff0fff0fff0fff'

def move_click(x, y, t = 0):  # 移动鼠标并点击左键
	win32api.SetCursorPos((x, y))  # 设置鼠标位置(x, y)
	if t == 0:
		win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN | win32con.MOUSEEVENTF_LEFTUP, x, y, 0, 0)  # 点击鼠标左键
	time.sleep(random.random() * 2 + 1)
	print("over click")


def scoll_window(x, y, roll):
	win32api.mouse_event(win32con.MOUSEEVENTF_WHEEL,x, y, roll * 2, win32con.WHEEL_DELTA)
	time.sleep(random.random() * 2 + 1)

def get_window_info():  # 获取阴阳师窗口信息
	wdname = u'阴阳师-网易游戏'
	handle = win32gui.FindWindow(0, wdname)  # 获取窗口句柄
	if handle == 0:
		print("Error to find yys")
		return None
	else:
		return win32gui.GetWindowRect(handle)

def get_posx(x, window_size):  # 返回x相对坐标
	return (window_size[2] - window_size[0]) * x / 1154


def get_posy(y, window_size):  # 返回y相对坐标
	return (window_size[3] - window_size[1]) * y / 684

def get_hash(img):		# 对图片计算hash值
	img = img.resize((16, 16), Image.ANTIALIAS).convert('L')  # 抗锯齿 灰度
	avg = sum(list(img.getdata())) / 256  # 计算像素平均值
	s = ''.join(map(lambda i: '0' if i < avg else '1', img.getdata()))  # 每个像素进行比对,大于avg为1,反之为0
	return ''.join(map(lambda j: '%x' % int(s[j:j+4], 2), range(0, 256, 4)))

def hamming(hash1, hash2, n=20):	# 计算汉明距离
	b = False
	assert len(hash1) == len(hash2)
	if sum(ch1 != ch2 for ch1, ch2 in zip(hash1, hash2)) < n:
		b = True
	return b

def random_in_range(min, max):		# 在给定范围内进行随机数
	return min + int((max - min) * random.random())

def pic_grab(topx, topy, bottomx, bottomy, initx, inity):
	return ImageGrab.grab((initx + topx, inity + topy, initx + bottomx, inity + bottomy))

def get_bin_table(threshold = 135):
	# 获取灰度转二值的映射table
	table = []
	for i in range(256):
		if i < threshold:
			table.append(0)
		else:
			table.append(1)
	return table

def check_name(name1, name2):
	if len(name1) != len(name2):
		if len(name1) > len(name2):
			 return name1
		return name2
	res = ""
	for i in range(len(name1)):
		if name1[i] == name2[i]:
			res += name1[i]
		else:
			res += '*'
	return res

def pic_word_read():
	image = Image.open('name_tmp.jpg')

	imgry = image.convert('L')
	table = get_bin_table()
	out = imgry.point(table, '1')
	text = pytesseract.image_to_string(out, lang='chi_sim') # 灰度处理后识别
	text = text.replace(" ","").replace("\"","").replace("\'","").replace("\t","").replace("\\","")
	print(text)
	return text

def pic_digit_read(path):
	image = Image.open(path)

	text = pytesseract.image_to_string(image, config = 'digits') # 数字识别
	fil = filter(str.isdigit, text)
	new_text = ''
	for i in fil:
		new_text += i
	return int(new_text)

def addtodict2(thedict, key_a, key_b, val): 
    if key_a in thedict:
        thedict[key_a].update({key_b: val})
    else:
        thedict.update({key_a:{key_b: val}})
    return thedict

if __name__ == '__main__':
	
	# 初始化窗口定位
	window_size = get_window_info()
	if window_size is not None:
		initx = window_size[0]
		inity = window_size[1]
		
		# 确认当前为管理页面
		img_manage = pic_grab(40, 40, 300, 300, initx, inity)
		# 查看图片
#		img_manage.show()

		img_manage_hash = get_hash(img_manage)
		
		if not hamming(img_manage_hash, manage_symb_hash):
			print("Error Page")
#			exit(0)
		print("Right Page")

		# 获取总人数
		img_tmp = pic_grab(315, 195, 357, 219, initx, inity)
		img_tmp.save('peoNum.jpg')
		peoNum = pic_digit_read('peoNum.jpg')
		print(peoNum)


		# 首先按累计勋章降序(因为这项值不容易改变，上线下线等可能会造成统计失误)
		move_click(initx + random_in_range(785, 893), inity + random_in_range(122, 152))

		# 移动到成员列表，方便后续滑动
		move_click(initx + random_in_range(890, 968), inity + random_in_range(170, 518), 1)
		UserDict = {}
		for i in range(int(peoNum / 5) + 1):
			for j in range(5):
				# 获取人名
				img_tmp = pic_grab(514, 169, 669, 196, initx, int(j * 71) + inity)
				img_tmp.save('name_tmp.jpg')
				name_tmp = pic_word_read()
				img_tmp.save(name_tmp + '.jpg')
				UserDict = addtodict2(UserDict, name_tmp, "name", name_tmp)

				# 获取本周功勋
				img_tmp = pic_grab(685, 177, 765, 220, initx, int(j * 71) + inity)
				img_tmp.save('week_tmp.jpg')
				week_tmp = pic_digit_read('week_tmp.jpg')
				print(week_tmp)
				UserDict = addtodict2(UserDict, name_tmp, "week", week_tmp)

				# 获取累计功勋
				img_tmp = pic_grab(791, 177, 885, 220, initx, int(j * 71) + inity)
				img_tmp.save('all_tmp.jpg')
				all_tmp = pic_digit_read('all_tmp.jpg')
				print(all_tmp)
				UserDict = addtodict2(UserDict, name_tmp, "all", all_tmp)
				print(UserDict)
			# 滑动页面
		#	scoll_window(initx + random_in_range(448, 968), inity + random_in_range(170, 518), -352)